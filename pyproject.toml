[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "pygeocdse"
dynamic = ["version"]
description = ''
readme = "README.md"
requires-python = ">=3.8"
license = "MIT"
keywords = []
authors = [
  { name = "Fabrice Brito", email = "fabrice.brito@terradue.com" },
  { name = "Simone Tripodi", email = "simone.tripodi@terradue.com" },
]
classifiers = [
  "Development Status :: 4 - Beta",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: Implementation :: CPython",
  "Programming Language :: Python :: Implementation :: PyPy",
]
dependencies = [
  "pygeofilter>=0.3.1",
  "ipykernel",
  "shapely",
  "nose2",
  "loguru",
  "requests"
]

[project.urls]
Documentation = "https://github.com/Terradue/pygeofilter-odata-cdse#readme"
Issues = "https://github.com/Terradue/pygeofilter-odata-cdse/issues"
Source = "https://github.com/Terradue/pygeofilter-odata-cdse"

[tool.hatch.version]
path = "src/pygeocdse/__about__.py"

[tool.hatch.envs.types]
extra-dependencies = [
  "mypy>=1.0.0",
]
[tool.hatch.envs.types.scripts]
check = "mypy --install-types --non-interactive {args:src/pygeocdse tests}"

[tool.coverage.run]
source_pkgs = ["pygeocdse", "tests"]
branch = true
parallel = true
omit = [
  "src/pygeocdse/__about__.py",
]

[tool.coverage.paths]
pygeocdse = ["src/pygeocdse", "*/pygeocdse/src/pygeocdse"]
tests = ["tests", "*/pygeocdse/tests"]

[tool.coverage.report]
exclude_lines = [
  "no cov",
  "if __name__ == .__main__.:",
  "if TYPE_CHECKING:",
]


[tool.hatch.envs.default.scripts]
test = "hatch run nose2"